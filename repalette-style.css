* {
    font-family:'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    font-size: 16px;
    letter-spacing: 0.02em;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

h1 {
    font-size: 4rem;
    margin-top: 0;
    margin-bottom: 1rem;
    color: var(--light1);
}

h2, .h2-spacer {
    --h2: 1.5rem;
    font-size: var(--h2);
    color: var(--light2);
}

h3 {
    font-size: 18px
}

html {
    --light1: var(--b3);
    --light2: var(--b4);
    --light3: var(--b7);
    --dark1: var(--b5);
    --dark2: var(--b6);
    --accent1: var(--b1);
    --accent2: var(--b2);

    --b1: #B65A5A;
    --b2: #7CA4A3;
    --b3: #CBC3A5;
    --b4: #BE9775;
    --b5: #5B5358;
    --b6: #484048; /*333033*/
    --b7: #7b7579; /*#776677*/

    --j1: #d11033;
    --j2: #c8ad87;
    --j3: #eee7d7;
    --j4: #f6f5f6;
    --j5: #424246;
}

body {
    min-height: 100vh;
    width: fit-content;
    min-width: 100%;
    display: flex;
    flex-direction: column;
}

main {
    background-color: var(--dark1);
    color: var(--light1);
    flex-grow: 1;
    display: grid;
    grid-template-columns: minmax(0, 1fr) fit-content(32ch) minmax(0, 1fr);
    row-gap: 1.5rem;
    padding: 1.5rem;
    grid-template-rows: auto auto;
}

header{
    padding-top: 2rem;
    padding-bottom: 3rem;
    background-color: var(--dark2);
}

footer {
    background-color: var(--dark2);
    color: var(--light3);
    padding: 2rem;
}

/*#region Style classes*/

.flex {
    display: flex;
}

.vertical {
    flex-flow: column;
}

.flex.center {
    display: flex;
    align-items: center;
}

.center {
    text-align: center;
}

.hidden, .template {
    display: none;
}

.divider {
    margin: 0.25rem 0;
    border: 0.125rem solid var(--accent2);
    border-radius: 4px;
}

.custom-btn {
    /* CSS reset */
    background: none;
	color: inherit;
	border: none;
	padding: 0;
	font: inherit;
	outline: none;
    font-size: inherit;
    cursor: pointer;
    /* Transform behaviour */
    transform: scale(1);
    transition: transform 0.15s ease-in-out;
    transform-origin: 55% 50%;
    color: var(--accent2);
}

.custom-btn.close {
    /* Somehow this aligns the icons with the text */
    position: absolute;
    line-height: 0%;
    left: -2rem;
    bottom: 50%; 
}

.close::before {  
    /* Expands clickable area */
    content: "";
    display: inline-block;
    position: absolute;
    width: 3rem;
    height: 2rem;
    top: -1rem;
    left: -1rem;
}

.close {
    color: var(--light2);
    bottom: 55%; 
}
  
.custom-btn:hover {
    transform: scale(1.3); 
}

.error {
    color: var(--accent1);
    margin-top: -0.25rem;
}

.h2-spacer {
    height: var(--h2);
}

.selected .tab {
    background-color: var(--accent1);
    border-radius: 2px;
}

.selected {
    outline: 2px solid var(--light1);
    outline-offset: 2px;
    border-radius: 2px;
}

.initial {
    width: 200px;
    height: 150px;
} 

/*#endregion*/

/*#region Displays*/
.left-display {
    grid-area: 1 / 1 / 2 / 2
}

.center-display {
    grid-area: 1 / 2 / 2 / 3;
    align-self: center;
}

.right-display {
    grid-area: 1 / 3 / 2 / 4 
}

.left-display, .right-display, .center-display {
    gap: 1.5rem;
    justify-content: center;
}

.display > * {
    outline: 4px dashed var(--light1);
    outline-offset: 4px;
    overflow: scroll;
    max-width: calc(100% - 1rem);
    max-height: 60vh;
    image-rendering: pixelated;
    object-fit: cover;
}

.center-display button {
    width: 4.5rem;
    height: 3.5rem;
    background-color: var(--accent1);
    border: 4px outset var(--accent1);
    border-radius: 0.25rem;
    overflow: hidden;
}

.center-display svg {
    fill: var(--dark1);
    height: 2.25rem;
    margin: auto;
}

.center-display button:active {
    border-style: inset;
    padding: 4px 0 0 4px;
}

.center-display button:hover {
    /* filter: brightness(80%) contrast(120%); */
    background-color: var(--light2);
    border-color: var(--light2);
}

.radios {
    gap: 0.2rem;
    padding: 0 1.5rem;
    margin-top: -0.75rem;
}
/*#endregion*/

/*#region Lists*/
.images.list {
    grid-area: 2 / 1 / 3 / 2;
}

.palettes.list {
    grid-area: 2 / 3 / 3 / 4;
}

.list {
    gap: 0.5rem;
}

.list a {
    color: inherit;
    height: inherit;
    position: relative;
}

.list a::after {
    content: url('external-link-svgrepo-com.svg');
    display: inline-block;
    position: absolute;
    top: 4px;
}

.url-upload, .image, .palette {
    position: relative;
}

input[type=text] {   
    width: 100%;
    background-color: var(--light1);
    border-color: var(--light1);
    border-radius: 0.2em;
    margin: 0.25rem 0;
    overflow: hidden;
    text-overflow: ellipsis;
    overflow-wrap: break-word;
}

input[type=text]::placeholder {
    color: var(--dark1);
    text-align: center;
}

.name, .upload { 
    overflow: hidden;
    text-overflow: ellipsis;
    text-wrap: nowrap;
    overflow-wrap: break-word;
    padding-inline: 2.75rem;
}

.upload {
    margin-bottom: 0.5rem;
    padding-inline: 0;
}

.list > * {
    width: clamp(16rem, 75%, 75%)
}

.color-list {
    display: flex;
    flex-flow: wrap;
    counter-reset: item;
    list-style: none;
    gap: 4px;
    margin-top: 4px;
}

.color {
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 2px;
    counter-increment: item;
    display: flex;
    justify-content: center;
    align-items: center;
    letter-spacing: 0px;
    font-size: 0.875rem;
}

.color::before {
    content: counter(item);
    color: #eee;
    text-shadow:
        -1px -1px 0 var(--dark2),
        0   -1px 0 var(--dark2),
        1px -1px 0 var(--dark2),
        1px  0   0 var(--dark2),
        1px  1px 0 var(--dark2),
        0    1px 0 var(--dark2),
        -1px  1px 0 var(--dark2),
        -1px  0   0 var(--dark2);
}

.tab {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.name:focus {
    background-color: var(--light1);
    padding: 0 4px;
    color: var(--dark1);
    outline: 2px solid var(--dark2);
}

.container {
    position: absolute;
    right: 0.5rem;
    gap: 0.5rem;
}

.tab .custom-btn::after {
    line-height: 1rem;
    color: var(--light1);
}

.rename::after {
    content: 'üñâ';
    font-size: 0.9rem;
    position: relative;
    top: -1px;
}

.expand::after {
    content: '‚Æü';
    font-size: 1.1rem;
}

.expanded .expand::after {
    content: '‚Æù';
    font-size: 1.1rem;
}

.color-list {
    display: none;
}
.expanded + .color-list{
    display: flex;
}
/*#endregion*/

